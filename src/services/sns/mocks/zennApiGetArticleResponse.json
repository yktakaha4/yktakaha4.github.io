{
  "article": {
    "id": 119400,
    "post_type": "Article",
    "title": "UptimeRobotとTerraformでおこなう死活監視",
    "slug": "synthetic_monitoring_with_ur_and_tf",
    "comments_count": 0,
    "liked_count": 16,
    "body_letters_count": 10943,
    "article_type": "tech",
    "emoji": "👁",
    "is_suspending_private": false,
    "published_at": "2022-10-19T18:01:03.538+09:00",
    "body_updated_at": "2022-10-30T22:32:15.680+09:00",
    "source_repo_updated_at": "2022-10-30T22:32:15.675+09:00",
    "pinned": false,
    "path": "/yktakaha4/articles/synthetic_monitoring_with_ur_and_tf",
    "body_html": "<p><a href=\"http://lapras.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">LAPRAS 株式会社</a>でSREをしています<a href=\"https://twitter.com/yktakaha4\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">yktakaha4</a>と申します<br>\nプロダクトの死活監視について考えたこと・やったことの備忘メモになります ✍</p>\n<h2 id=\"%E6%AD%BB%E6%B4%BB%E7%9B%A3%E8%A6%96-%2F-%E5%90%88%E6%88%90%E7%9B%A3%E8%A6%96%E3%81%A3%E3%81%A6%E3%81%AA%E3%81%AB\">\n<a class=\"header-anchor-link\" href=\"#%E6%AD%BB%E6%B4%BB%E7%9B%A3%E8%A6%96-%2F-%E5%90%88%E6%88%90%E7%9B%A3%E8%A6%96%E3%81%A3%E3%81%A6%E3%81%AA%E3%81%AB\" aria-hidden=\"true\"></a> 死活監視 / 合成監視ってなに</h2>\n<p>合成監視（Synthetic Monitoring）とは、Webシステムの監視手法のひとつで、システム外の環境からHTTPクライアント等を通じて特定のエンドポイントに対して定期的にアクセスすることで、エンドユーザーが受けている体験に近い指標値を計測するものです<br>\nプロダクトの稼働状況やパフォーマンスの評価などに活用することが一般的です</p>\n<p><span class=\"embed-block zenn-embedded zenn-embedded-card\"><iframe id=\"zenn-embedded__65edaa387fbe6\" src=\"https://embed.zenn.studio/card#zenn-embedded__65edaa387fbe6\" data-content=\"https%3A%2F%2Fnewrelic.com%2Fjp%2Fblog%2Fhow-to-relic%2Fsynthetic-versus-real-user-monitoring\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\"></iframe></span><a href=\"https://newrelic.com/jp/blog/how-to-relic/synthetic-versus-real-user-monitoring\" style=\"display:none\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://newrelic.com/jp/blog/how-to-relic/synthetic-versus-real-user-monitoring</a></p>\n<p>なお、日本語では外形監視という訳語が当てられる場合が多いものと思いますが、原義を考えると適切でないと指摘している方もいるようです</p>\n<p><span class=\"embed-block zenn-embedded zenn-embedded-card\"><iframe id=\"zenn-embedded__c574b59c66a09\" src=\"https://embed.zenn.studio/card#zenn-embedded__c574b59c66a09\" data-content=\"https%3A%2F%2Ftakehora.hatenadiary.jp%2Fentry%2F2019%2F07%2F05%2F012036\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\"></iframe></span><a href=\"https://takehora.hatenadiary.jp/entry/2019/07/05/012036\" style=\"display:none\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://takehora.hatenadiary.jp/entry/2019/07/05/012036</a></p>\n<p>死活監視（Alive monitoring）は、合成監視の中でもシステムの稼働状況に焦点をあてた監視になります<br>\n<code>Webページにアクセスした際にHTTP200ステータスが返されるか</code> や <code>レスポンスに特定のキーワードが含まれるか</code> といった項目を数分おきにプロダクト外のネットワークから自動チェックし、条件を満たさなかった場合にメールやSlack等に通知を送ります</p>\n<p>死活監視だけではユーザーがプロダクトに対してどのような価値（あるいは不満）を感じているかわかりませんが、<br>\nWebサービスを提供している会社であれば、プロダクトのURLにアクセスした際にサービスページが表示されるのは事業継続の観点で大前提になっているものと思います<br>\n性質上、既存のシステムに対してエージェントを追加するといったシステム改修も不要で導入できるため、監視が不十分なレガシーシステムに対する最初の一歩としてもオススメです</p>\n<p><span class=\"embed-block zenn-embedded zenn-embedded-card\"><iframe id=\"zenn-embedded__94b4e0685b5f6\" src=\"https://embed.zenn.studio/card#zenn-embedded__94b4e0685b5f6\" data-content=\"https%3A%2F%2Fe-words.jp%2Fw%2F%25E6%25AD%25BB%25E6%25B4%25BB%25E7%259B%25A3%25E8%25A6%2596.html\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\"></iframe></span><a href=\"https://e-words.jp/w/%E6%AD%BB%E6%B4%BB%E7%9B%A3%E8%A6%96.html\" style=\"display:none\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://e-words.jp/w/死活監視.html</a></p>\n<p>弊社では、<a href=\"https://uptimerobot.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">UptimeRobot</a>というWebアプリケーションの死活監視に特化したSaaSを利用して死活監視をおこなっています<br>\nシンプルながらツボを抑えた機能群と、50エンドポイントまでは無料で監視をおこなえるという導入コストの低さから、副業や個人的な開発でも気に入って使っています</p>\n<p><span class=\"embed-block zenn-embedded zenn-embedded-card\"><iframe id=\"zenn-embedded__1742528d045f7\" src=\"https://embed.zenn.studio/card#zenn-embedded__1742528d045f7\" data-content=\"https%3A%2F%2Fuptimerobot.com%2Fpricing%2F\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\"></iframe></span><a href=\"https://uptimerobot.com/pricing/\" style=\"display:none\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://uptimerobot.com/pricing/</a></p>\n<p>もっとも、これだけだと本番稼働するプロダクトの監視としては不十分なので、弊社では<a href=\"https://www.datadoghq.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Datadog</a>や<a href=\"https://sentry.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Sentry</a>といった複数の監視サービスを用いて様々なレイヤで監視をおこなうようにしていますが、今回は記事の趣旨からは逸れるため割愛します</p>\n<h2 id=\"%E8%AA%B2%E9%A1%8C\">\n<a class=\"header-anchor-link\" href=\"#%E8%AA%B2%E9%A1%8C\" aria-hidden=\"true\"></a> 課題</h2>\n<p>前述したUptimeRobotによる監視について、従来はいくつか課題がありました</p>\n<p>第一に、どのエンドポイントをどのような内容 / 頻度で監視しているか分かりづらい問題がありました<br>\n以下はUptimeRobotの設定画面のイメージですが、各ページの詳細画面を開かないと設定状況がわからず、設定値がエンドポイント毎にずれてしまっていても気づきづらいものと思います</p>\n<p><img src=\"https://storage.googleapis.com/zenn-user-upload/382f1d4b7e7b-20221012.png\" alt loading=\"lazy\" class=\"md-img\"><br>\n<em>UptimeRobotの編集画面</em></p>\n<p>もうひとつの問題として、設定を手動でおこなっており抜け、漏れが発生しやすいというのもありました</p>\n<p>例えば、弊社でエンジニアとして働いていると<a href=\"http://lapras.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">LAPRAS</a>や<a href=\"http://scout.lapras.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">LAPRAS SCOUT</a>といった主要プロダクトについては頻繁にリリースをおこないますし日々稼働状況に注意を払っていますが、<br>\n自社で運用しているオウンドメディアである<a href=\"https://hr-tech-lab.lapras.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">HR TECH LAB</a> や、外部SaaSにドメイン設定して運用している<a href=\"https://talent-help.lapras.com/ja/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">LAPRASのヘルプページ</a>といったサイト、<a href=\"http://corp.lapras.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">コーポレートページ</a>については、エンジニアによる改修が発生しづらいため意識から漏れがちです<br>\n一方で、事業運営という観点においてはいずれのサイトも重要な意味を持っており、SREとしては稼働状況をチェックしておきたいところです</p>\n<p><a href=\"https://www.amazon.co.jp/dp/4873118646\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">入門 監視</a>でも、監視の手動設定はアンチパターンとして紹介されています<br>\nプロダクトがリリースされたら完全自動で設定される…といったことにまではならないにしても、監視設定をコード管理できると適用の半自動化や変更管理もできてよさそうです</p>\n<p>また、現在弊社には15〜20人ほどのエンジニアが在籍しており、全てのメンバーが監視やインフラ領域を得意としているわけでもありません<br>\nそうした人でも設定がしやすいように、新しくリリースしたプロダクトにどのような監視を設定すべきか予めパターンが提示されており、<br>\nそこに対象のエンドポイントを追加する…といった運用にできるとよりよさそうに思えます</p>\n<p>ということで、今回は<strong>UptimeRobotの監視設定をコード化する</strong>ということをスコープに、どのような監視を実現すべきか考えていきました</p>\n<h2 id=\"%E3%81%A9%E3%81%AE%E3%82%88%E3%81%86%E3%81%AA%E7%9B%A3%E8%A6%96%E3%82%92%E3%81%99%E3%81%B9%E3%81%8D%E3%81%8B\">\n<a class=\"header-anchor-link\" href=\"#%E3%81%A9%E3%81%AE%E3%82%88%E3%81%86%E3%81%AA%E7%9B%A3%E8%A6%96%E3%82%92%E3%81%99%E3%81%B9%E3%81%8D%E3%81%8B\" aria-hidden=\"true\"></a> どのような監視をすべきか</h2>\n<p>私が運用を引き継いだ当初は、いくつかの主要サービスのみまちまちに監視設定をおこなっている状況だったのですが、<br>\nこの機会に改めて自社で管理している各エンドポイントを整理して考えた結果、以下のようなグルーピングをおこなうこととしました</p>\n<table>\n<thead>\n<tr>\n<th>サービス種類</th>\n<th>監視観点</th>\n<th>監視頻度</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>a.主要プロダクト</td>\n<td>正常応答を返すこと</td>\n<td>高</td>\n</tr>\n<tr>\n<td>b.オウンドメディア<br>コーポレートサイト</td>\n<td>正常応答を返すこと</td>\n<td>低</td>\n</tr>\n<tr>\n<td>c.資格情報が必要なサービス</td>\n<td>（権限無しの時）異常応答を返すこと</td>\n<td>中</td>\n</tr>\n<tr>\n<td>d.社内向けサービス</td>\n<td>（権限無しの時）応答を返さないこと</td>\n<td>中</td>\n</tr>\n</tbody>\n</table>\n<p>こうした分類をしたのは、調査を通じて<strong>一般ユーザーにとって見れない/繋がらないことがプロダクトの提供する機能である場合もある</strong>という実感を得たからでした</p>\n<p>例えば弊社の運用するプロダクトではGitHub等の外部サービスをクローリングして技術力スコアを計算する…といった機能がありますが、<br>\nそれらに管理画面があったとすれば、それは特定のIPや社内向けVPNからのみアクセス可能であるべきです<br>\n仮に、AWS WAFやセキュリティグループなどでそうしたアクセス制限をおこなっていたとして、本番作業時のイレギュラーな手作業や設定ミスなどで設定が外れてしまった場合、何かしらの監視をおこなっていなければ機能を毀損してしまっていることに気づくのはかなり難しくなります</p>\n<p>監視という言葉からは動作することのチェックという連想をしやすいですが、（特定の条件において）動作しないということに対して何かしらアプリケーション外での作り込みや設定をしているのであれば、それに対してチェックをおこなうと安心してプロダクトが運用できるものと思います</p>\n<p>ちなみに、今回一番大変だったのが、Route53等のDNSサービスに登録されているレコードとサービスの実態調査でした<br>\n歴史的経緯から弊社のRoute53は全てのレコードをTerraform管理できていないのですが、<br>\nその結果として既に廃止されていたり用途不明になっているサービスなど、実態を把握できていないものもちらほらあることがわかり、意義のある調査だったと思います<br>\n（ココらへんの話もまとまった内容ができたら記事にしたいなと思っています…🐤）</p>\n<p><img src=\"https://storage.googleapis.com/zenn-user-upload/fa46ca83bcb1-20221012.png\" alt loading=\"lazy\" class=\"md-img\"><br>\n<em>イメージ図。実際は更にx倍あって震えた</em></p>\n<h2 id=\"terraform%E3%83%97%E3%83%AD%E3%83%90%E3%82%A4%E3%83%80%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6\">\n<a class=\"header-anchor-link\" href=\"#terraform%E3%83%97%E3%83%AD%E3%83%90%E3%82%A4%E3%83%80%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6\" aria-hidden=\"true\"></a> Terraformプロバイダについて</h2>\n<p>弊社では、インフラの構成管理に<a href=\"https://www.terraform.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Terraform</a>を使っています<br>\nTerraformにはプロバイダという仕組みがあり、REST APIが公開されているサービスであればサードパーティにてコードを書くことでTerraformにて構成管理ができます</p>\n<p>UptimeRobotについても、個人にて作成された<a href=\"https://github.com/louy/terraform-provider-uptimerobot\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">louy/terraform-provider-uptimerobot</a>というプロバイダがあるのですが、こちらについては直近でPRマージが滞っており、<br>\n弊社の監視を実現するのにあたって使いたいいくつかの機能が実装されていないという状況にありました</p>\n<p>このため、今回弊社のOrganizationでForkをおこない（経緯から実際にForkしたのは上記リポジトリとはまた別のものなのですが…）、必要な機能を足したものをTerraform registryに登録しました</p>\n<p><span class=\"embed-block zenn-embedded zenn-embedded-card\"><iframe id=\"zenn-embedded__5ed7ffba42194\" src=\"https://embed.zenn.studio/card#zenn-embedded__5ed7ffba42194\" data-content=\"https%3A%2F%2Fregistry.terraform.io%2Fproviders%2Flapras-inc%2Fuptimerobot%2F0.8.3\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\"></iframe></span><a href=\"https://registry.terraform.io/providers/lapras-inc/uptimerobot/0.8.3\" style=\"display:none\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://registry.terraform.io/providers/lapras-inc/uptimerobot/0.8.3</a></p>\n<p>リポジトリはこちらです<br>\nよければPRお待ちしています🐔</p>\n<p><span class=\"embed-block zenn-embedded zenn-embedded-card\"><iframe id=\"zenn-embedded__8f0caf8d324cc\" src=\"https://embed.zenn.studio/card#zenn-embedded__8f0caf8d324cc\" data-content=\"https%3A%2F%2Fgithub.com%2Flapras-inc%2Fterraform-provider-uptimerobot\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\"></iframe></span><a href=\"https://github.com/lapras-inc/terraform-provider-uptimerobot\" style=\"display:none\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://github.com/lapras-inc/terraform-provider-uptimerobot</a></p>\n<p>なお、今回初めてTerraform Registryにプロバイダを公開したのですが、公式ドキュメントが充実しており、<a href=\"https://developer.hashicorp.com/terraform/tutorials/providers/provider-release-publish\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">チュートリアル</a>もあったのでわかりやすかったです</p>\n<p><span class=\"embed-block zenn-embedded zenn-embedded-card\"><iframe id=\"zenn-embedded__13277985f882f\" src=\"https://embed.zenn.studio/card#zenn-embedded__13277985f882f\" data-content=\"https%3A%2F%2Fdeveloper.hashicorp.com%2Fterraform%2Fregistry%2Fproviders%2Fpublishing\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\"></iframe></span><a href=\"https://developer.hashicorp.com/terraform/registry/providers/publishing\" style=\"display:none\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://developer.hashicorp.com/terraform/registry/providers/publishing</a></p>\n<h2 id=\"%E8%A8%AD%E5%AE%9A%E3%82%B5%E3%83%B3%E3%83%97%E3%83%AB\">\n<a class=\"header-anchor-link\" href=\"#%E8%A8%AD%E5%AE%9A%E3%82%B5%E3%83%B3%E3%83%97%E3%83%AB\" aria-hidden=\"true\"></a> 設定サンプル</h2>\n<p>作成したTerraform定義のイメージについても簡単に紹介します<br>\nプロバイダ定義は以下のようにおこないます</p>\n<div class=\"code-block-container\">\n<div class=\"code-block-filename-container\"><span class=\"code-block-filename\">terraform.tf</span></div>\n<pre class=\"language-hcl\"><code class=\"language-hcl\"><span class=\"token keyword\">terraform</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">required_providers</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">uptimerobot</span> <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">source</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"lapras-inc/uptimerobot\"</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">provider<span class=\"token type variable\"> \"uptimerobot\" </span></span><span class=\"token punctuation\">{</span>\n  <span class=\"token comment\"># 環境変数に UPTIMEROBOT_API_KEY をセットしてください</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n</div><p>リソースとしては、モニターが <a href=\"https://registry.terraform.io/providers/lapras-inc/uptimerobot/latest/docs/resources/monitor\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">uptimerobot_monitor</a> に対応しています<br>\nオリジナルのものと比較して、 <code>custom_http_statuses</code> などのプロパティに対応しています</p>\n<p>監視対象のエンドポイント毎にResourceを作るのが大変なので、<a href=\"https://developer.hashicorp.com/terraform/language/meta-arguments/for_each\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">for_each</a> を使って配列の内容からいい感じに生成するようにしています</p>\n<div class=\"code-block-container\">\n<div class=\"code-block-filename-container\"><span class=\"code-block-filename\">uptimerobot_monitor.tf</span></div>\n<pre class=\"language-hcl\"><code class=\"language-hcl\"><span class=\"token keyword\">resource <span class=\"token type variable\">\"uptimerobot_monitor\"</span></span> <span class=\"token string\">\"should_get_http\"</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\"># 稼働状態を高頻度（1分ごと）にチェックしたいエンドポイント（a.）</span>\n\n  <span class=\"token property\">for_each</span> <span class=\"token punctuation\">=</span> toset(var.uptimerobot_alert_should_get_http)\n\n  <span class=\"token property\">friendly_name</span>     <span class=\"token punctuation\">=</span> <span class=\"token string\">\"<span class=\"token interpolation\"><span class=\"token punctuation\">$</span><span class=\"token punctuation\">{</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">,</span> each<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span></span> (should_get_http)\"</span>\n  <span class=\"token property\">type</span>              <span class=\"token punctuation\">=</span> <span class=\"token string\">\"http\"</span>\n  <span class=\"token property\">http_method</span>       <span class=\"token punctuation\">=</span> <span class=\"token string\">\"GET\"</span>\n  <span class=\"token property\">url</span>               <span class=\"token punctuation\">=</span> each.value\n  <span class=\"token property\">interval</span>          <span class=\"token punctuation\">=</span> <span class=\"token number\">60</span>\n  <span class=\"token property\">ignore_ssl_errors</span> <span class=\"token punctuation\">=</span> <span class=\"token boolean\">false</span>\n\n  <span class=\"token keyword\">alert_contact</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">id</span> <span class=\"token punctuation\">=</span> var.uptimerobot_alert_contact_id_should\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">resource <span class=\"token type variable\">\"uptimerobot_monitor\"</span></span> <span class=\"token string\">\"should_connect_port\"</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\"># 特定のポートを公開しているエンドポイント（a.）</span>\n  <span class=\"token property\">for_each</span> <span class=\"token punctuation\">=</span> toset(var.uptimerobot_alert_should_connect_port)\n\n  <span class=\"token property\">friendly_name</span>     <span class=\"token punctuation\">=</span> <span class=\"token property\">\"${split(\"</span>:<span class=\"token string\">\", each.value)[0]} (should_connect_port)\"</span>\n  <span class=\"token property\">type</span>              <span class=\"token punctuation\">=</span> <span class=\"token string\">\"port\"</span>\n  <span class=\"token property\">sub_type</span>          <span class=\"token punctuation\">=</span> <span class=\"token string\">\"custom\"</span>\n  <span class=\"token property\">url</span>               <span class=\"token punctuation\">=</span> split(<span class=\"token string\">\":\"</span>, each.value)<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n  <span class=\"token property\">port</span>              <span class=\"token punctuation\">=</span> split(<span class=\"token string\">\":\"</span>, each.value)<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n  <span class=\"token property\">interval</span>          <span class=\"token punctuation\">=</span> <span class=\"token number\">60</span>\n  <span class=\"token property\">ignore_ssl_errors</span> <span class=\"token punctuation\">=</span> <span class=\"token boolean\">false</span>\n\n  <span class=\"token keyword\">alert_contact</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">id</span> <span class=\"token punctuation\">=</span> var.uptimerobot_alert_contact_id_should\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">resource <span class=\"token type variable\">\"uptimerobot_monitor\"</span></span> <span class=\"token string\">\"should_get_http_low_interval\"</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\"># 稼働状態を低頻度（5分ごと）にチェックしたいエンドポイント（b.）</span>\n\n  <span class=\"token property\">for_each</span> <span class=\"token punctuation\">=</span> toset(var.uptimerobot_alert_should_get_http_low_interval)\n\n  <span class=\"token property\">friendly_name</span>     <span class=\"token punctuation\">=</span> <span class=\"token string\">\"<span class=\"token interpolation\"><span class=\"token punctuation\">$</span><span class=\"token punctuation\">{</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">,</span> each<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span></span> (should_get_http_low_interval)\"</span>\n  <span class=\"token property\">type</span>              <span class=\"token punctuation\">=</span> <span class=\"token string\">\"http\"</span>\n  <span class=\"token property\">http_method</span>       <span class=\"token punctuation\">=</span> <span class=\"token string\">\"GET\"</span>\n  <span class=\"token property\">url</span>               <span class=\"token punctuation\">=</span> each.value\n  <span class=\"token property\">interval</span>          <span class=\"token punctuation\">=</span> <span class=\"token number\">300</span>\n  <span class=\"token property\">ignore_ssl_errors</span> <span class=\"token punctuation\">=</span> <span class=\"token boolean\">false</span>\n\n  <span class=\"token keyword\">alert_contact</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">id</span> <span class=\"token punctuation\">=</span> var.uptimerobot_alert_contact_id_should\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">resource <span class=\"token type variable\">\"uptimerobot_monitor\"</span></span> <span class=\"token string\">\"should_missing_key_cloudfront\"</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\"># CloudFront+S3の署名付きURLが認証情報なし時にエラーとなる（c.）</span>\n  <span class=\"token property\">for_each</span> <span class=\"token punctuation\">=</span> toset(var.uptimerobot_alert_should_missing_key_cloudfront)\n\n  <span class=\"token property\">friendly_name</span>     <span class=\"token punctuation\">=</span> <span class=\"token string\">\"<span class=\"token interpolation\"><span class=\"token punctuation\">$</span><span class=\"token punctuation\">{</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">,</span> each<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span></span> (should_missing_key_cloudfront)\"</span>\n  <span class=\"token property\">type</span>              <span class=\"token punctuation\">=</span> <span class=\"token string\">\"keyword\"</span>\n  <span class=\"token property\">keyword_type</span>      <span class=\"token punctuation\">=</span> <span class=\"token string\">\"not exists\"</span>\n  <span class=\"token property\">keyword_value</span>     <span class=\"token punctuation\">=</span> <span class=\"token string\">\"&lt;Error&gt;&lt;Code&gt;MissingKey&lt;/Code&gt;\"</span>\n  <span class=\"token property\">http_method</span>       <span class=\"token punctuation\">=</span> <span class=\"token string\">\"GET\"</span>\n  <span class=\"token property\">url</span>               <span class=\"token punctuation\">=</span> each.value\n  <span class=\"token property\">interval</span>          <span class=\"token punctuation\">=</span> <span class=\"token number\">60</span>\n  <span class=\"token property\">ignore_ssl_errors</span> <span class=\"token punctuation\">=</span> <span class=\"token boolean\">false</span>\n\n  <span class=\"token keyword\">alert_contact</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">id</span> <span class=\"token punctuation\">=</span> var.uptimerobot_alert_contact_id_should\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">resource <span class=\"token type variable\">\"uptimerobot_monitor\"</span></span> <span class=\"token string\">\"should_forbidden_http\"</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\"># 適切なアクセス権がない場合に403を返すエンドポイント（c.）</span>\n  <span class=\"token property\">for_each</span> <span class=\"token punctuation\">=</span> toset(var.uptimerobot_alert_should_forbidden_http)\n\n  <span class=\"token property\">friendly_name</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"<span class=\"token interpolation\"><span class=\"token punctuation\">$</span><span class=\"token punctuation\">{</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">,</span> each<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span></span> (should_forbidden_http)\"</span>\n  <span class=\"token property\">type</span>          <span class=\"token punctuation\">=</span> <span class=\"token string\">\"http\"</span>\n  <span class=\"token property\">http_method</span>   <span class=\"token punctuation\">=</span> <span class=\"token string\">\"GET\"</span>\n  <span class=\"token property\">url</span>           <span class=\"token punctuation\">=</span> each.value\n  <span class=\"token property\">interval</span>          <span class=\"token punctuation\">=</span> <span class=\"token number\">300</span>\n  <span class=\"token property\">ignore_ssl_errors</span> <span class=\"token punctuation\">=</span> <span class=\"token boolean\">false</span>\n\n  <span class=\"token keyword\">custom_http_statuses</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">up</span> <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"403\"</span><span class=\"token punctuation\">]</span>\n    <span class=\"token property\">down</span> <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token string\">\"200\"</span>, <span class=\"token string\">\"201\"</span>, <span class=\"token string\">\"202\"</span>, <span class=\"token string\">\"203\"</span>, <span class=\"token string\">\"204\"</span>, <span class=\"token string\">\"205\"</span>, <span class=\"token string\">\"206\"</span>, <span class=\"token string\">\"207\"</span>, <span class=\"token string\">\"208\"</span>, <span class=\"token string\">\"226\"</span>,\n      <span class=\"token string\">\"300\"</span>, <span class=\"token string\">\"301\"</span>, <span class=\"token string\">\"302\"</span>, <span class=\"token string\">\"303\"</span>, <span class=\"token string\">\"304\"</span>, <span class=\"token string\">\"305\"</span>, <span class=\"token string\">\"306\"</span>, <span class=\"token string\">\"307\"</span>, <span class=\"token string\">\"308\"</span>,\n    <span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">alert_contact</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">id</span> <span class=\"token punctuation\">=</span> var.uptimerobot_alert_contact_id_should\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">resource <span class=\"token type variable\">\"uptimerobot_monitor\"</span></span> <span class=\"token string\">\"should_not_connect\"</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\"># 社内システムや開発環境など、特定ネットワーク以外からは接続自体を拒否するエンドポイント（d.）</span>\n  <span class=\"token property\">for_each</span> <span class=\"token punctuation\">=</span> toset(var.uptimerobot_alert_should_not_connect)\n\n  <span class=\"token property\">friendly_name</span>     <span class=\"token punctuation\">=</span> <span class=\"token property\">\"[SHOULD DOWN] ${split(\"</span>:<span class=\"token string\">\", each.value)[0]} (should_not_connect)\"</span>\n  <span class=\"token property\">type</span>              <span class=\"token punctuation\">=</span> <span class=\"token string\">\"port\"</span>\n  <span class=\"token property\">sub_type</span>          <span class=\"token punctuation\">=</span> <span class=\"token string\">\"custom\"</span>\n  <span class=\"token property\">url</span>               <span class=\"token punctuation\">=</span> split(<span class=\"token string\">\":\"</span>, each.value)<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n  <span class=\"token property\">port</span>              <span class=\"token punctuation\">=</span> split(<span class=\"token string\">\":\"</span>, each.value)<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\n  <span class=\"token property\">interval</span>          <span class=\"token punctuation\">=</span> <span class=\"token number\">60</span>\n  <span class=\"token property\">ignore_ssl_errors</span> <span class=\"token punctuation\">=</span> <span class=\"token boolean\">false</span>\n\n  <span class=\"token keyword\">alert_contact</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">id</span> <span class=\"token punctuation\">=</span> var.uptimerobot_alert_contact_id_should_not\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n</div><p>Resourceの生成元になる変数は以下になります</p>\n<div class=\"code-block-container\">\n<div class=\"code-block-filename-container\"><span class=\"code-block-filename\">variable.tf</span></div>\n<pre class=\"language-hcl\"><code class=\"language-hcl\"><span class=\"token keyword\">variable<span class=\"token type variable\"> \"uptimerobot_alert_contact_id_should\" </span></span><span class=\"token punctuation\">{</span>\n  <span class=\"token comment\"># 接続できることを監視しているアラート</span>\n  <span class=\"token comment\"># API仕様によりTerraformからは全てのプロパティが設定できないため、Alert Contactは手動で作成したものを紐付ける</span>\n  <span class=\"token comment\"># IDはAPIの getAlertContacts から確認できる</span>\n  <span class=\"token comment\"># https://uptimerobot.com/api/</span>\n  <span class=\"token property\">default</span> <span class=\"token punctuation\">=</span> <span class=\"token number\">1234567</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">variable<span class=\"token type variable\"> \"uptimerobot_alert_contact_id_should_not\" </span></span><span class=\"token punctuation\">{</span>\n  <span class=\"token comment\"># 接続できないことを監視しているアラート</span>\n  <span class=\"token property\">default</span> <span class=\"token punctuation\">=</span> <span class=\"token number\">7654321</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">variable<span class=\"token type variable\"> \"uptimerobot_alert_should_get_http\" </span></span><span class=\"token punctuation\">{</span>\n  <span class=\"token comment\"># あなたの会社の主要プロダクト</span>\n  <span class=\"token property\">default</span> <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">\"https://your-main-product.com\"</span>,\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">variable<span class=\"token type variable\"> \"uptimerobot_alert_should_get_http_low_interval\" </span></span><span class=\"token punctuation\">{</span>\n  <span class=\"token comment\"># あなたの会社で管理しているドメイン名に紐づくブログなど</span>\n  <span class=\"token property\">default</span> <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">\"https://your-owned-media.com\"</span>,\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">variable<span class=\"token type variable\"> \"uptimerobot_alert_should_missing_key_cloudfront\" </span></span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">default</span> <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token comment\"># 署名付きURLによるアクセス保護がされているドメイン</span>\n    <span class=\"token comment\"># CloudFrontのルートに `health.html` などの漏洩しても問題ないファイルを適当においておく</span>\n    <span class=\"token string\">\"https://assets.your-main-product.com/health.html\"</span>,\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">variable<span class=\"token type variable\"> \"uptimerobot_alert_should_forbidden_http\" </span></span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">default</span> <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token comment\"># アクセス制御がされているURL</span>\n    <span class=\"token string\">\"https://your-owned-media.com/administrator/\"</span>,\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">variable<span class=\"token type variable\"> \"uptimerobot_alert_should_connect_port\" </span></span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">default</span> <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token comment\"># ポートに対する接続性を監視するドメイン</span>\n    <span class=\"token string\">\"your-product-service.com:22222\"</span>,\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">variable<span class=\"token type variable\"> \"uptimerobot_alert_should_not_connect\" </span></span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">default</span> <span class=\"token punctuation\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token comment\"># 社内向けに提供しておりIP制限をかけているエンドポイント</span>\n    <span class=\"token string\">\"your-internal-site.com:443\"</span>,\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n</div><p>ポイントとしては、dのタイプの監視については本来Connection timeoutになることを定期チェックしたいのですが、Uptimerobotには現状そのような設定方法がないため、Downしていることを通常の状態と判断するようメッセージでわかるようにしています</p>\n<p><img src=\"https://storage.googleapis.com/zenn-user-upload/6519cc704faf-20221019.png\" alt loading=\"lazy\" class=\"md-img\"><br>\n<em>常にエラーになるエンドポイント</em></p>\n<p>また、コメント中でも記載していますが、アラート設定についても<a href=\"https://registry.terraform.io/providers/lapras-inc/uptimerobot/latest/docs/resources/alert_contact\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">uptimerobot_alert_contact</a> を使うとTerraformにて定義できますが、 <code>Custom Value</code> という値が<a href=\"https://uptimerobot.com/api/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">API</a>から指定できないため、手動作成したものに紐付けています</p>\n<p><span class=\"embed-block zenn-embedded zenn-embedded-card\"><iframe id=\"zenn-embedded__bc995641659cb\" src=\"https://embed.zenn.studio/card#zenn-embedded__bc995641659cb\" data-content=\"https%3A%2F%2Fuptimerobot.com%2Fapi%2F\" frameborder=\"0\" scrolling=\"no\" loading=\"lazy\"></iframe></span><a href=\"https://uptimerobot.com/api/\" style=\"display:none\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://uptimerobot.com/api/</a></p>\n<p><img src=\"https://storage.googleapis.com/zenn-user-upload/691584d50247-20221019.png\" alt loading=\"lazy\" class=\"md-img\"><br>\n<em>アラート設定</em></p>\n<p>本定義を設定の上、監視対象のサービスの稼働状態が変わると以下のようにエラーメッセージがSlack通知されます</p>\n<p><img src=\"https://storage.googleapis.com/zenn-user-upload/cb7b7d6ace9d-20221019.png\" alt loading=\"lazy\" class=\"md-img\"><br>\n<em>Slack通知の様子</em></p>\n<h2 id=\"%E3%81%8A%E3%82%8F%E3%82%8A%E3%81%AB\">\n<a class=\"header-anchor-link\" href=\"#%E3%81%8A%E3%82%8F%E3%82%8A%E3%81%AB\" aria-hidden=\"true\"></a> おわりに</h2>\n<p>今回やって気づいたこととして、実際の監視と同じくらい、 <code>社内にどのようなエンドポイントが存在し、それをどのような重要度で監視をおこなうべきと考えているか</code> という観点がコードに残るということが大きなメリットであると気づきました</p>\n<p>チームの解散や異動、退職などでプロダクトに関わる人が変わった時に、保守すべき対象が引き継ぎ不十分で行方不明になってしまう…的なことはよくある話かと思いますが、<br>\nエンドポイントがあるサービスはユーザーに対する価値提供に直結している場合がとても多いと思いますので、まず外形監視の定義を見て、そこからプロダクトの詳細を探っていく…というようなやり方が定着すると、属人性の低い運用ができるように思いました</p>\n<p><img src=\"https://storage.googleapis.com/zenn-user-upload/c612964401c2-20221019.png\" alt loading=\"lazy\" class=\"md-img\"><br>\n<em>実際のソースコード</em></p>\n<p>引き続き、なるべく人に仕事がつかないプロダクト運用について考えていきたいと思います🦃</p>\n",
    "og_image_url": "https://res.cloudinary.com/zenn/image/upload/s--th_sKUXd--/c_fit%2Cg_north_west%2Cl_text:notosansjp-medium.otf_55:UptimeRobot%25E3%2581%25A8Terraform%25E3%2581%25A7%25E3%2581%258A%25E3%2581%2593%25E3%2581%25AA%25E3%2581%2586%25E6%25AD%25BB%25E6%25B4%25BB%25E7%259B%25A3%25E8%25A6%2596%2Cw_1010%2Cx_90%2Cy_100/g_south_west%2Cl_text:notosansjp-medium.otf_37:Yuuki%2520Takahashi%2Cx_203%2Cy_121/g_south_west%2Ch_90%2Cl_fetch:aHR0cHM6Ly9saDMuZ29vZ2xldXNlcmNvbnRlbnQuY29tL2EtL0FPaDE0R2huMEtJWDdJZzVrRm9aVVlkai1yWDZfYk1UNDhEUXE5WE53YUVsPXMyNTAtYw==%2Cr_max%2Cw_90%2Cx_87%2Cy_95/v1627283836/default/og-base-w1200-v2.png",
    "toc": [
      {
        "id": "%E6%AD%BB%E6%B4%BB%E7%9B%A3%E8%A6%96-%2F-%E5%90%88%E6%88%90%E7%9B%A3%E8%A6%96%E3%81%A3%E3%81%A6%E3%81%AA%E3%81%AB",
        "text": "死活監視 / 合成監視ってなに",
        "level": 2,
        "children": []
      },
      {
        "id": "%E8%AA%B2%E9%A1%8C",
        "text": "課題",
        "level": 2,
        "children": []
      },
      {
        "id": "%E3%81%A9%E3%81%AE%E3%82%88%E3%81%86%E3%81%AA%E7%9B%A3%E8%A6%96%E3%82%92%E3%81%99%E3%81%B9%E3%81%8D%E3%81%8B",
        "text": "どのような監視をすべきか",
        "level": 2,
        "children": []
      },
      {
        "id": "terraform%E3%83%97%E3%83%AD%E3%83%90%E3%82%A4%E3%83%80%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6",
        "text": "Terraformプロバイダについて",
        "level": 2,
        "children": []
      },
      {
        "id": "%E8%A8%AD%E5%AE%9A%E3%82%B5%E3%83%B3%E3%83%97%E3%83%AB",
        "text": "設定サンプル",
        "level": 2,
        "children": []
      },
      {
        "id": "%E3%81%8A%E3%82%8F%E3%82%8A%E3%81%AB",
        "text": "おわりに",
        "level": 2,
        "children": []
      }
    ],
    "toc_enabled": true,
    "should_noindex": false,
    "scheduled_publish_at": null,
    "can_send_badge": true,
    "status": "published",
    "badges": [],
    "is_mine": false,
    "is_preview": false,
    "current_user_liked": false,
    "github_repository": null,
    "user": {
      "id": 627,
      "username": "yktakaha4",
      "name": "Yuuki Takahashi",
      "avatar_small_url": "https://lh3.googleusercontent.com/a-/AOh14Ghn0KIX7Ig5kFoZUYdj-rX6_bMT48DQq9XNwaEl=s80-c",
      "avatar_url": "https://lh3.googleusercontent.com/a-/AOh14Ghn0KIX7Ig5kFoZUYdj-rX6_bMT48DQq9XNwaEl=s250-c",
      "bio": "",
      "autolinked_bio": "",
      "github_username": "yktakaha4",
      "twitter_username": "yktakaha4",
      "is_support_open": true,
      "tokusyo_contact": null,
      "tokusyo_name": null,
      "website_url": "https://yktakaha4.github.io/",
      "website_domain": "yktakaha4.github.io",
      "total_liked_count": 1219,
      "ga_tracking_id": "G-1Z0C1RDBPC",
      "hatena_id": null,
      "is_invoice_issuer": false
    },
    "publication": null,
    "topics": [
      {
        "id": 234,
        "name": "terraform",
        "display_name": "Terraform",
        "taggings_count": 1322,
        "image_url": "https://storage.googleapis.com/zenn-user-upload/topics/056b318177.jpeg"
      },
      {
        "id": 1334,
        "name": "監視",
        "display_name": "監視",
        "taggings_count": 76,
        "image_url": null
      },
      {
        "id": 16878,
        "name": "uptimerobot",
        "display_name": "uptimerobot",
        "taggings_count": 1,
        "image_url": null
      }
    ],
    "comments": [],
    "positive_comments_count": 0,
    "commented_users": []
  }
}
